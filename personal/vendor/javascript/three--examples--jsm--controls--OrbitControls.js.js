import{Ray as e,Plane as t,MathUtils as o,EventDispatcher as n,Vector3 as a,MOUSE as i,TOUCH as s,Quaternion as r,Spherical as c,Vector2 as l}from"three";const u={type:"change"};const d={type:"start"};const h={type:"end"};const m=new e;const p=new t;const f=Math.cos(70*o.DEG2RAD);class OrbitControls extends n{constructor(e,t){super();this.object=e;this.domElement=t;this.domElement.style.touchAction="none";this.enabled=true;this.target=new a;this.cursor=new a;this.minDistance=0;this.maxDistance=Infinity;this.minZoom=0;this.maxZoom=Infinity;this.minTargetRadius=0;this.maxTargetRadius=Infinity;this.minPolarAngle=0;this.maxPolarAngle=Math.PI;this.minAzimuthAngle=-Infinity;this.maxAzimuthAngle=Infinity;this.enableDamping=false;this.dampingFactor=.05;this.enableZoom=true;this.zoomSpeed=1;this.enableRotate=true;this.rotateSpeed=1;this.enablePan=true;this.panSpeed=1;this.screenSpacePanning=true;this.keyPanSpeed=7;this.zoomToCursor=false;this.autoRotate=false;this.autoRotateSpeed=2;this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"};this.mouseButtons={LEFT:i.ROTATE,MIDDLE:i.DOLLY,RIGHT:i.PAN};this.touches={ONE:s.ROTATE,TWO:s.DOLLY_PAN};this.target0=this.target.clone();this.position0=this.object.position.clone();this.zoom0=this.object.zoom;this._domElementKeyEvents=null;this.getPolarAngle=function(){return g.phi};this.getAzimuthalAngle=function(){return g.theta};this.getDistance=function(){return this.object.position.distanceTo(this.target)};this.listenToKeyEvents=function(e){e.addEventListener("keydown",onKeyDown);this._domElementKeyEvents=e};this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",onKeyDown);this._domElementKeyEvents=null};this.saveState=function(){o.target0.copy(o.target);o.position0.copy(o.object.position);o.zoom0=o.object.zoom};this.reset=function(){o.target.copy(o.target0);o.object.position.copy(o.position0);o.object.zoom=o.zoom0;o.object.updateProjectionMatrix();o.dispatchEvent(u);o.update();b=n.NONE};this.update=function(){const t=new a;const i=(new r).setFromUnitVectors(e.up,new a(0,1,0));const s=i.clone().invert();const c=new a;const l=new r;const d=new a;const h=2*Math.PI;return function update(r=null){const M=o.object.position;t.copy(M).sub(o.target);t.applyQuaternion(i);g.setFromVector3(t);o.autoRotate&&b===n.NONE&&rotateLeft(getAutoRotationAngle(r));if(o.enableDamping){g.theta+=P.theta*o.dampingFactor;g.phi+=P.phi*o.dampingFactor}else{g.theta+=P.theta;g.phi+=P.phi}let v=o.minAzimuthAngle;let w=o.maxAzimuthAngle;if(isFinite(v)&&isFinite(w)){v<-Math.PI?v+=h:v>Math.PI&&(v-=h);w<-Math.PI?w+=h:w>Math.PI&&(w-=h);g.theta=v<=w?Math.max(v,Math.min(w,g.theta)):g.theta>(v+w)/2?Math.max(v,g.theta):Math.min(w,g.theta)}g.phi=Math.max(o.minPolarAngle,Math.min(o.maxPolarAngle,g.phi));g.makeSafe();o.enableDamping===true?o.target.addScaledVector(T,o.dampingFactor):o.target.add(T);o.target.sub(o.cursor);o.target.clampLength(o.minTargetRadius,o.maxTargetRadius);o.target.add(o.cursor);let D=false;if(o.zoomToCursor&&N||o.object.isOrthographicCamera)g.radius=clampDistance(g.radius);else{const e=g.radius;g.radius=clampDistance(g.radius*E);D=e!=g.radius}t.setFromSpherical(g);t.applyQuaternion(s);M.copy(o.target).add(t);o.object.lookAt(o.target);if(o.enableDamping===true){P.theta*=1-o.dampingFactor;P.phi*=1-o.dampingFactor;T.multiplyScalar(1-o.dampingFactor)}else{P.set(0,0,0);T.set(0,0,0)}if(o.zoomToCursor&&N){let n=null;if(o.object.isPerspectiveCamera){const e=t.length();n=clampDistance(e*E);const a=e-n;o.object.position.addScaledVector(A,a);o.object.updateMatrixWorld();D=!!a}else if(o.object.isOrthographicCamera){const e=new a(k.x,k.y,0);e.unproject(o.object);const i=o.object.zoom;o.object.zoom=Math.max(o.minZoom,Math.min(o.maxZoom,o.object.zoom/E));o.object.updateProjectionMatrix();D=i!==o.object.zoom;const s=new a(k.x,k.y,0);s.unproject(o.object);o.object.position.sub(s).add(e);o.object.updateMatrixWorld();n=t.length()}else{console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.");o.zoomToCursor=false}if(n!==null)if(this.screenSpacePanning)o.target.set(0,0,-1).transformDirection(o.object.matrix).multiplyScalar(n).add(o.object.position);else{m.origin.copy(o.object.position);m.direction.set(0,0,-1).transformDirection(o.object.matrix);if(Math.abs(o.object.up.dot(m.direction))<f)e.lookAt(o.target);else{p.setFromNormalAndCoplanarPoint(o.object.up,o.target);m.intersectPlane(p,o.target)}}}else if(o.object.isOrthographicCamera){const e=o.object.zoom;o.object.zoom=Math.max(o.minZoom,Math.min(o.maxZoom,o.object.zoom/E));if(e!==o.object.zoom){o.object.updateProjectionMatrix();D=true}}E=1;N=false;if(D||c.distanceToSquared(o.object.position)>y||8*(1-l.dot(o.object.quaternion))>y||d.distanceToSquared(o.target)>y){o.dispatchEvent(u);c.copy(o.object.position);l.copy(o.object.quaternion);d.copy(o.target);return true}return false}}();this.dispose=function(){o.domElement.removeEventListener("contextmenu",onContextMenu);o.domElement.removeEventListener("pointerdown",onPointerDown);o.domElement.removeEventListener("pointercancel",onPointerUp);o.domElement.removeEventListener("wheel",onMouseWheel);o.domElement.removeEventListener("pointermove",onPointerMove);o.domElement.removeEventListener("pointerup",onPointerUp);const e=o.domElement.getRootNode();e.removeEventListener("keydown",interceptControlDown,{capture:true});if(o._domElementKeyEvents!==null){o._domElementKeyEvents.removeEventListener("keydown",onKeyDown);o._domElementKeyEvents=null}};const o=this;const n={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let b=n.NONE;const y=1e-6;const g=new c;const P=new c;let E=1;const T=new a;const M=new l;const v=new l;const w=new l;const D=new l;const O=new l;const j=new l;const S=new l;const R=new l;const L=new l;const A=new a;const k=new l;let N=false;const x=[];const C={};let I=false;function getAutoRotationAngle(e){return e!==null?2*Math.PI/60*o.autoRotateSpeed*e:2*Math.PI/60/60*o.autoRotateSpeed}function getZoomScale(e){const t=Math.abs(e*.01);return Math.pow(.95,o.zoomSpeed*t)}function rotateLeft(e){P.theta-=e}function rotateUp(e){P.phi-=e}const Y=function(){const e=new a;return function panLeft(t,o){e.setFromMatrixColumn(o,0);e.multiplyScalar(-t);T.add(e)}}();const K=function(){const e=new a;return function panUp(t,n){if(o.screenSpacePanning===true)e.setFromMatrixColumn(n,1);else{e.setFromMatrixColumn(n,0);e.crossVectors(o.object.up,e)}e.multiplyScalar(t);T.add(e)}}();const z=function(){const e=new a;return function pan(t,n){const a=o.domElement;if(o.object.isPerspectiveCamera){const i=o.object.position;e.copy(i).sub(o.target);let s=e.length();s*=Math.tan(o.object.fov/2*Math.PI/180);Y(2*t*s/a.clientHeight,o.object.matrix);K(2*n*s/a.clientHeight,o.object.matrix)}else if(o.object.isOrthographicCamera){Y(t*(o.object.right-o.object.left)/o.object.zoom/a.clientWidth,o.object.matrix);K(n*(o.object.top-o.object.bottom)/o.object.zoom/a.clientHeight,o.object.matrix)}else{console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.");o.enablePan=false}}}();function dollyOut(e){if(o.object.isPerspectiveCamera||o.object.isOrthographicCamera)E/=e;else{console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.");o.enableZoom=false}}function dollyIn(e){if(o.object.isPerspectiveCamera||o.object.isOrthographicCamera)E*=e;else{console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.");o.enableZoom=false}}function updateZoomParameters(e,t){if(!o.zoomToCursor)return;N=true;const n=o.domElement.getBoundingClientRect();const a=e-n.left;const i=t-n.top;const s=n.width;const r=n.height;k.x=a/s*2-1;k.y=-i/r*2+1;A.set(k.x,k.y,1).unproject(o.object).sub(o.object.position).normalize()}function clampDistance(e){return Math.max(o.minDistance,Math.min(o.maxDistance,e))}function handleMouseDownRotate(e){M.set(e.clientX,e.clientY)}function handleMouseDownDolly(e){updateZoomParameters(e.clientX,e.clientX);S.set(e.clientX,e.clientY)}function handleMouseDownPan(e){D.set(e.clientX,e.clientY)}function handleMouseMoveRotate(e){v.set(e.clientX,e.clientY);w.subVectors(v,M).multiplyScalar(o.rotateSpeed);const t=o.domElement;rotateLeft(2*Math.PI*w.x/t.clientHeight);rotateUp(2*Math.PI*w.y/t.clientHeight);M.copy(v);o.update()}function handleMouseMoveDolly(e){R.set(e.clientX,e.clientY);L.subVectors(R,S);L.y>0?dollyOut(getZoomScale(L.y)):L.y<0&&dollyIn(getZoomScale(L.y));S.copy(R);o.update()}function handleMouseMovePan(e){O.set(e.clientX,e.clientY);j.subVectors(O,D).multiplyScalar(o.panSpeed);z(j.x,j.y);D.copy(O);o.update()}function handleMouseWheel(e){updateZoomParameters(e.clientX,e.clientY);e.deltaY<0?dollyIn(getZoomScale(e.deltaY)):e.deltaY>0&&dollyOut(getZoomScale(e.deltaY));o.update()}function handleKeyDown(e){let t=false;switch(e.code){case o.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?rotateUp(2*Math.PI*o.rotateSpeed/o.domElement.clientHeight):z(0,o.keyPanSpeed);t=true;break;case o.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?rotateUp(-2*Math.PI*o.rotateSpeed/o.domElement.clientHeight):z(0,-o.keyPanSpeed);t=true;break;case o.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?rotateLeft(2*Math.PI*o.rotateSpeed/o.domElement.clientHeight):z(o.keyPanSpeed,0);t=true;break;case o.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?rotateLeft(-2*Math.PI*o.rotateSpeed/o.domElement.clientHeight):z(-o.keyPanSpeed,0);t=true;break}if(t){e.preventDefault();o.update()}}function handleTouchStartRotate(e){if(x.length===1)M.set(e.pageX,e.pageY);else{const t=getSecondPointerPosition(e);const o=.5*(e.pageX+t.x);const n=.5*(e.pageY+t.y);M.set(o,n)}}function handleTouchStartPan(e){if(x.length===1)D.set(e.pageX,e.pageY);else{const t=getSecondPointerPosition(e);const o=.5*(e.pageX+t.x);const n=.5*(e.pageY+t.y);D.set(o,n)}}function handleTouchStartDolly(e){const t=getSecondPointerPosition(e);const o=e.pageX-t.x;const n=e.pageY-t.y;const a=Math.sqrt(o*o+n*n);S.set(0,a)}function handleTouchStartDollyPan(e){o.enableZoom&&handleTouchStartDolly(e);o.enablePan&&handleTouchStartPan(e)}function handleTouchStartDollyRotate(e){o.enableZoom&&handleTouchStartDolly(e);o.enableRotate&&handleTouchStartRotate(e)}function handleTouchMoveRotate(e){if(x.length==1)v.set(e.pageX,e.pageY);else{const t=getSecondPointerPosition(e);const o=.5*(e.pageX+t.x);const n=.5*(e.pageY+t.y);v.set(o,n)}w.subVectors(v,M).multiplyScalar(o.rotateSpeed);const t=o.domElement;rotateLeft(2*Math.PI*w.x/t.clientHeight);rotateUp(2*Math.PI*w.y/t.clientHeight);M.copy(v)}function handleTouchMovePan(e){if(x.length===1)O.set(e.pageX,e.pageY);else{const t=getSecondPointerPosition(e);const o=.5*(e.pageX+t.x);const n=.5*(e.pageY+t.y);O.set(o,n)}j.subVectors(O,D).multiplyScalar(o.panSpeed);z(j.x,j.y);D.copy(O)}function handleTouchMoveDolly(e){const t=getSecondPointerPosition(e);const n=e.pageX-t.x;const a=e.pageY-t.y;const i=Math.sqrt(n*n+a*a);R.set(0,i);L.set(0,Math.pow(R.y/S.y,o.zoomSpeed));dollyOut(L.y);S.copy(R);const s=(e.pageX+t.x)*.5;const r=(e.pageY+t.y)*.5;updateZoomParameters(s,r)}function handleTouchMoveDollyPan(e){o.enableZoom&&handleTouchMoveDolly(e);o.enablePan&&handleTouchMovePan(e)}function handleTouchMoveDollyRotate(e){o.enableZoom&&handleTouchMoveDolly(e);o.enableRotate&&handleTouchMoveRotate(e)}function onPointerDown(e){if(o.enabled!==false){if(x.length===0){o.domElement.setPointerCapture(e.pointerId);o.domElement.addEventListener("pointermove",onPointerMove);o.domElement.addEventListener("pointerup",onPointerUp)}if(!isTrackingPointer(e)){addPointer(e);e.pointerType==="touch"?onTouchStart(e):onMouseDown(e)}}}function onPointerMove(e){o.enabled!==false&&(e.pointerType==="touch"?onTouchMove(e):onMouseMove(e))}function onPointerUp(e){removePointer(e);switch(x.length){case 0:o.domElement.releasePointerCapture(e.pointerId);o.domElement.removeEventListener("pointermove",onPointerMove);o.domElement.removeEventListener("pointerup",onPointerUp);o.dispatchEvent(h);b=n.NONE;break;case 1:const t=x[0];const a=C[t];onTouchStart({pointerId:t,pageX:a.x,pageY:a.y});break}}function onMouseDown(e){let t;switch(e.button){case 0:t=o.mouseButtons.LEFT;break;case 1:t=o.mouseButtons.MIDDLE;break;case 2:t=o.mouseButtons.RIGHT;break;default:t=-1}switch(t){case i.DOLLY:if(o.enableZoom===false)return;handleMouseDownDolly(e);b=n.DOLLY;break;case i.ROTATE:if(e.ctrlKey||e.metaKey||e.shiftKey){if(o.enablePan===false)return;handleMouseDownPan(e);b=n.PAN}else{if(o.enableRotate===false)return;handleMouseDownRotate(e);b=n.ROTATE}break;case i.PAN:if(e.ctrlKey||e.metaKey||e.shiftKey){if(o.enableRotate===false)return;handleMouseDownRotate(e);b=n.ROTATE}else{if(o.enablePan===false)return;handleMouseDownPan(e);b=n.PAN}break;default:b=n.NONE}b!==n.NONE&&o.dispatchEvent(d)}function onMouseMove(e){switch(b){case n.ROTATE:if(o.enableRotate===false)return;handleMouseMoveRotate(e);break;case n.DOLLY:if(o.enableZoom===false)return;handleMouseMoveDolly(e);break;case n.PAN:if(o.enablePan===false)return;handleMouseMovePan(e);break}}function onMouseWheel(e){if(o.enabled!==false&&o.enableZoom!==false&&b===n.NONE){e.preventDefault();o.dispatchEvent(d);handleMouseWheel(customWheelEvent(e));o.dispatchEvent(h)}}function customWheelEvent(e){const t=e.deltaMode;const o={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(t){case 1:o.deltaY*=16;break;case 2:o.deltaY*=100;break}e.ctrlKey&&!I&&(o.deltaY*=10);return o}function interceptControlDown(e){if(e.key==="Control"){I=true;const e=o.domElement.getRootNode();e.addEventListener("keyup",interceptControlUp,{passive:true,capture:true})}}function interceptControlUp(e){if(e.key==="Control"){I=false;const e=o.domElement.getRootNode();e.removeEventListener("keyup",interceptControlUp,{passive:true,capture:true})}}function onKeyDown(e){o.enabled!==false&&o.enablePan!==false&&handleKeyDown(e)}function onTouchStart(e){trackPointer(e);switch(x.length){case 1:switch(o.touches.ONE){case s.ROTATE:if(o.enableRotate===false)return;handleTouchStartRotate(e);b=n.TOUCH_ROTATE;break;case s.PAN:if(o.enablePan===false)return;handleTouchStartPan(e);b=n.TOUCH_PAN;break;default:b=n.NONE}break;case 2:switch(o.touches.TWO){case s.DOLLY_PAN:if(o.enableZoom===false&&o.enablePan===false)return;handleTouchStartDollyPan(e);b=n.TOUCH_DOLLY_PAN;break;case s.DOLLY_ROTATE:if(o.enableZoom===false&&o.enableRotate===false)return;handleTouchStartDollyRotate(e);b=n.TOUCH_DOLLY_ROTATE;break;default:b=n.NONE}break;default:b=n.NONE}b!==n.NONE&&o.dispatchEvent(d)}function onTouchMove(e){trackPointer(e);switch(b){case n.TOUCH_ROTATE:if(o.enableRotate===false)return;handleTouchMoveRotate(e);o.update();break;case n.TOUCH_PAN:if(o.enablePan===false)return;handleTouchMovePan(e);o.update();break;case n.TOUCH_DOLLY_PAN:if(o.enableZoom===false&&o.enablePan===false)return;handleTouchMoveDollyPan(e);o.update();break;case n.TOUCH_DOLLY_ROTATE:if(o.enableZoom===false&&o.enableRotate===false)return;handleTouchMoveDollyRotate(e);o.update();break;default:b=n.NONE}}function onContextMenu(e){o.enabled!==false&&e.preventDefault()}function addPointer(e){x.push(e.pointerId)}function removePointer(e){delete C[e.pointerId];for(let t=0;t<x.length;t++)if(x[t]==e.pointerId){x.splice(t,1);return}}function isTrackingPointer(e){for(let t=0;t<x.length;t++)if(x[t]==e.pointerId)return true;return false}function trackPointer(e){let t=C[e.pointerId];if(t===void 0){t=new l;C[e.pointerId]=t}t.set(e.pageX,e.pageY)}function getSecondPointerPosition(e){const t=e.pointerId===x[0]?x[1]:x[0];return C[t]}o.domElement.addEventListener("contextmenu",onContextMenu);o.domElement.addEventListener("pointerdown",onPointerDown);o.domElement.addEventListener("pointercancel",onPointerUp);o.domElement.addEventListener("wheel",onMouseWheel,{passive:false});const U=o.domElement.getRootNode();U.addEventListener("keydown",interceptControlDown,{passive:true,capture:true});this.update()}}export{OrbitControls};

